#!/bin/bash

#
# Wrapper script to run ceilometer-expirer when on active controller only
#
CEILOMETER_EXPIRER_INFO="/var/run/ceilometer-expirer.info"
CEILOMETER_EXPIRER_CMD="/usr/bin/nice -n 2 /usr/bin/ceilometer-expirer"

function is_active_pgserver()
{
    # Determine whether we're running on the same controller as the service.
    local service=postgres
    local enabledactive=$(/usr/bin/sm-query service $service| grep enabled-active)
    if [ "x$enabledactive" == "x" ]
    then
        # enabled-active not found for that service on this controller
        return 1
    else
        # enabled-active found for that resource
        return 0
    fi
}

if is_active_pgserver
then
    if [ ! -f ${CEILOMETER_EXPIRER_INFO} ]
    then
        echo skip_count=0 > ${CEILOMETER_EXPIRER_INFO}
    fi

    source ${CEILOMETER_EXPIRER_INFO}
    sudo -u postgres psql -d sysinv -c "SELECT alarm_id, entity_instance_id from i_alarm;" | grep -P "^(?=.*100.101)(?=.*${HOSTNAME})" &>/dev/null
    if [ $? -eq 0 ]
    then
        source /etc/platform/platform.conf
        if [ "${system_type}" = "All-in-one" ]
        then
	    source /etc/init.d/task_affinity_functions.sh
            idle_core=$(get_most_idle_core)
            if [ "$idle_core" -ne "0" ]
            then
		sh -c "exec taskset -c $idle_core ${CEILOMETER_EXPIRER_CMD}"
		sed -i "/skip_count/s/=.*/=0/" ${CEILOMETER_EXPIRER_INFO}
                exit 0
            fi
        fi

	if [ "$skip_count" -lt "3" ]
        then
            newval=$(($skip_count+1))
            sed -i "/skip_count/s/=.*/=$newval/" ${CEILOMETER_EXPIRER_INFO}
            exit 0
        fi
    fi

    eval ${CEILOMETER_EXPIRER_CMD}
    sed -i "/skip_count/s/=.*/=0/" ${CEILOMETER_EXPIRER_INFO}
fi

exit 0
